var searchIndex = JSON.parse('{\
"compiler_builtins":{"doc":"Our own <code>compiler_builtins</code>.","i":[],"p":[]},\
"kernel":{"doc":"The <code>kernel</code> crate.","i":[[0,"buffer","kernel","Struct for writing to a pre-allocated buffer with the […",null,null],[3,"Buffer","kernel::buffer","A pre-allocated buffer that implements [<code>core::fmt::Write</code>].",null,null],[11,"new","","Create a new buffer from an existing array.",0,[[]]],[11,"bytes_written","","Number of bytes that have already been written to the …",0,[[],["usize",15]]],[0,"c_types","kernel","C types for the bindings.",null,null],[6,"c_void","kernel::c_types","C <code>void</code> type.",null,null],[6,"c_char","","C <code>char</code> type.",null,null],[6,"c_schar","","C <code>signed char</code> type.",null,null],[6,"c_uchar","","C <code>unsigned char</code> type.",null,null],[6,"c_short","","C <code>short</code> type.",null,null],[6,"c_ushort","","C <code>unsigned short</code> type.",null,null],[6,"c_int","","C <code>int</code> type.",null,null],[6,"c_uint","","C <code>unsigned int</code> type.",null,null],[6,"c_long","","C <code>long</code> type.",null,null],[6,"c_ulong","","C <code>unsigned long</code> type.",null,null],[6,"c_longlong","","C <code>long long</code> type.",null,null],[6,"c_ulonglong","","C <code>unsigned long long</code> type.",null,null],[6,"c_ssize_t","","C <code>ssize_t</code> type (typically defined in <code><sys/types.h></code> by …",null,null],[6,"c_size_t","","C <code>size_t</code> type (typically defined in <code><stddef.h></code>).",null,null],[5,"c_string_bytes","","Reads string until null byte is reached and returns slice …",null,[[]]],[0,"chrdev","kernel","Character devices.",null,null],[3,"Registration","kernel::chrdev","Character device registration.",null,null],[11,"new","","Creates a [<code>Registration</code>] object for a character device.",1,[[["thismodule",3],["cstr",3],["u16",15]]]],[11,"new_pinned","","Creates a pinned [<code>Registration</code>] object for a character …",1,[[["thismodule",3],["cstr",3],["u16",15]],[["kernelresult",6],["pin",3]]]],[11,"register","","Registers a character device.",1,[[["pin",3]],["kernelresult",6]]],[0,"file_operations","kernel","File operations.",null,null],[3,"File","kernel::file_operations","Wraps the kernel\'s <code>struct file</code>.",null,null],[11,"pos","","Returns the current seek/cursor/pointer position (…",2,[[],["u64",15]]],[11,"is_blocking","","Returns whether the file is in blocking mode.",2,[[],["bool",15]]],[3,"PollTable","","Wraps the kernel\'s <code>struct poll_table_struct</code>.",null,null],[11,"register_wait","","Associates the given file and condition variable to this …",3,[[["condvar",3],["file",3]]]],[4,"SeekFrom","","Equivalent to <code>std::io::SeekFrom</code>.",null,null],[13,"Start","","Equivalent to C\'s <code>SEEK_SET</code>.",4,null],[13,"End","","Equivalent to C\'s <code>SEEK_END</code>.",4,null],[13,"Current","","Equivalent to C\'s <code>SEEK_CUR</code>.",4,null],[3,"ToUse","","Represents which fields of [<code>struct file_operations</code>] …",null,null],[12,"read","","The <code>read</code> field of [<code>struct file_operations</code>].",5,null],[12,"write","","The <code>write</code> field of [<code>struct file_operations</code>].",5,null],[12,"seek","","The <code>llseek</code> field of [<code>struct file_operations</code>].",5,null],[12,"ioctl","","The <code>unlocked_ioctl</code> field of [<code>struct file_operations</code>].",5,null],[12,"compat_ioctl","","The <code>compat_ioctl</code> field of [<code>struct file_operations</code>].",5,null],[12,"fsync","","The <code>fsync</code> field of [<code>struct file_operations</code>].",5,null],[12,"mmap","","The <code>mmap</code> field of [<code>struct file_operations</code>].",5,null],[12,"poll","","The <code>poll</code> field of [<code>struct file_operations</code>].",5,null],[17,"USE_NONE","","A constant version where all values are to set to <code>false</code>, …",null,null],[8,"IoctlHandler","","Allows the handling of ioctls defined with the <code>_IO</code>, <code>_IOR</code>, …",null,null],[11,"pure","","Handles ioctls defined with the <code>_IO</code> macro, that is, with …",6,[[["u32",15],["usize",15],["file",3]],[["kernelresult",6],["i32",15]]]],[11,"read","","Handles ioctls defined with the <code>_IOR</code> macro, that is, with …",6,[[["u32",15],["file",3],["usersliceptrwriter",3]],[["kernelresult",6],["i32",15]]]],[11,"write","","Handles ioctls defined with the <code>_IOW</code> macro, that is, with …",6,[[["u32",15],["file",3],["usersliceptrreader",3]],[["kernelresult",6],["i32",15]]]],[11,"read_write","","Handles ioctls defined with the <code>_IOWR</code> macro, that is, …",6,[[["u32",15],["file",3],["usersliceptr",3]],[["kernelresult",6],["i32",15]]]],[3,"IoctlCommand","","Represents an ioctl command.",null,null],[11,"dispatch","","Dispatches the given ioctl to the appropriate handler …",7,[[["file",3]],[["kernelresult",6],["i32",15]]]],[11,"raw","","Returns the raw 32-bit value of the command and the …",7,[[]]],[8,"FileOpenAdapter","","Trait for extracting file open arguments from kernel data …",null,null],[16,"Arg","","The type of argument this adapter extracts.",8,null],[10,"convert","","Converts untyped data stored in [<code>struct inode</code>] and […",8,[[]]],[8,"FileOpener","","Trait for implementers of kernel files.",null,null],[10,"open","","Creates a new instance of this file.",9,[[],["kernelresult",6]]],[8,"FileOperations","","Corresponds to the kernel\'s <code>struct file_operations</code>.",null,null],[18,"TO_USE","","The methods to use to populate [<code>struct file_operations</code>].",10,null],[16,"Wrapper","","The pointer type that will be used to hold ourselves.",10,null],[11,"release","","Cleans up after the last reference to the file goes away.",10,[[["file",3]]]],[11,"read","","Reads data from this file to userspace.",10,[[["u64",15],["file",3],["usersliceptrwriter",3]],[["usize",15],["kernelresult",6]]]],[11,"write","","Writes data from userspace to this file.",10,[[["u64",15],["usersliceptrreader",3]],[["usize",15],["kernelresult",6]]]],[11,"seek","","Changes the position of the file.",10,[[["file",3],["seekfrom",4]],[["kernelresult",6],["u64",15]]]],[11,"ioctl","","Performs IO control operations that are specific to the …",10,[[["file",3],["ioctlcommand",3]],[["kernelresult",6],["i32",15]]]],[11,"compat_ioctl","","Performs 32-bit IO control operations on that are …",10,[[["file",3],["ioctlcommand",3]],[["kernelresult",6],["i32",15]]]],[11,"fsync","","Syncs pending changes to this file.",10,[[["bool",15],["file",3],["u64",15]],[["u32",15],["kernelresult",6]]]],[11,"mmap","","Maps areas of the caller\'s virtual memory with …",10,[[["vm_area_struct",3],["file",3]],["kernelresult",6]]],[11,"poll","","Checks the state of the file and optionally registers for …",10,[[["polltable",3],["file",3]],[["u32",15],["kernelresult",6]]]],[8,"PointerWrapper","","Used to convert an object into a raw pointer that …",null,null],[10,"into_pointer","","Returns the raw pointer.",11,[[]]],[10,"from_pointer","","Returns the instance back from the raw pointer.",11,[[]]],[0,"miscdev","kernel","Miscellaneous devices.",null,null],[3,"Registration","kernel::miscdev","A registration of a miscellaneous device.",null,null],[12,"context","","Context initialised on construction and made available to …",12,null],[11,"new","","Creates a new [<code>Registration</code>] but does not register it yet.",12,[[]]],[11,"new_pinned","","Registers a miscellaneous device.",12,[[["i32",15],["cstr",3],["option",4]],[["kernelresult",6],["pin",3]]]],[11,"register","","Registers a miscellaneous device with the rest of the …",12,[[["pin",3],["i32",15],["option",4],["cstr",3]],["kernelresult",6]]],[0,"pages","kernel","Kernel page allocation and management.",null,null],[3,"Pages","kernel::pages","A set of physical pages.",null,null],[11,"new","","Allocates a new set of contiguous pages.",13,[[],["kernelresult",6]]],[11,"insert_page","","Maps a single page at the given address in the given VM …",13,[[["usize",15],["vm_area_struct",3]],["kernelresult",6]]],[11,"copy_into_page","","Copies data from the given [<code>UserSlicePtrReader</code>] into the …",13,[[["usize",15],["usersliceptrreader",3]],["kernelresult",6]]],[11,"read","","Maps the pages and reads from them into the given buffer.",13,[[["usize",15]],["kernelresult",6]]],[11,"write","","Maps the pages and writes into them from the given bufer.",13,[[["usize",15]],["kernelresult",6]]],[0,"linked_list","kernel","Linked lists.",null,null],[3,"Cursor","kernel::linked_list","A list cursor that allows traversing a linked list and …",null,null],[8,"GetLinks","","A descriptor of list elements.",null,null],[16,"EntryType","","The type of the entries in the list.",14,null],[10,"get_links","","Returns the links to be used when linking an entry within …",14,[[],["links",3]]],[3,"Links","","The links used to link an object on a linked list.",null,null],[8,"Wrapper","","Wraps an object to be inserted in a linked list.",null,null],[10,"into_pointer","","Converts the wrapped object into a pointer that …",15,[[],["nonnull",3]]],[10,"from_pointer","","Converts the object back from the pointer representation.",15,[[["nonnull",3]]]],[10,"as_ref","","Returns a reference to the wrapped object.",15,[[]]],[8,"GetLinksWrapped","","A descriptor of wrapped list elements.",null,null],[16,"Wrapped","","Specifies which wrapper (e.g., <code>Box</code> and <code>Arc</code>) wraps the …",16,null],[3,"List","","A linked list.",null,null],[11,"new","","Constructs a new empty linked list.",17,[[]]],[11,"is_empty","","Returns whether the list is empty.",17,[[],["bool",15]]],[11,"push_back","","Adds the given object to the end (back) of the list.",17,[[]]],[11,"insert_after","","Inserts the given object after <code>existing</code>.",17,[[["nonnull",3]]]],[11,"remove","","Removes the given entry.",17,[[],["option",4]]],[11,"pop_front","","Removes the element currently at the front of the list …",17,[[],["option",4]]],[11,"cursor_front","","Returns a cursor starting on the first (front) element of …",17,[[],["cursor",3]]],[11,"cursor_front_mut","","Returns a mutable cursor starting on the first (front) …",17,[[],["cursormut",3]]],[3,"CursorMut","","A list cursor that allows traversing a linked list and …",null,null],[11,"current","","Returns the element the cursor is currently positioned on.",18,[[],["option",4]]],[11,"remove_current","","Removes the element the cursor is currently positioned on.",18,[[],["option",4]]],[11,"peek_next","","Returns the element immediately after the one the cursor …",18,[[],["option",4]]],[11,"peek_prev","","Returns the element immediately before the one the cursor …",18,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element.",18,[[]]],[11,"new","","Constructs a new [<code>Links</code>] instance that isn\'t inserted on …",19,[[]]],[11,"current","","Returns the element the cursor is currently positioned on.",20,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element.",20,[[]]],[0,"prelude","kernel","The <code>kernel</code> prelude.",null,null],[8,"ToOwned","kernel::prelude","A generalization of <code>Clone</code> to borrowed data.",null,null],[16,"Owned","","The resulting type after obtaining ownership.",21,null],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",21,[[]]],[11,"clone_into","","Uses borrowed data to replace owned data, usually by …",21,[[]]],[3,"String","","A UTF-8–encoded, growable string.",null,null],[14,"module","","Declares a kernel module.",null,null],[6,"KernelResult","","A [<code>Result</code>] with an [<code>Error</code>] error type.",null,null],[0,"print","kernel","Printing facilities.",null,null],[0,"random","","Random numbers.",null,null],[5,"getrandom","kernel::random","Fills a byte slice with random bytes generated from the …",null,[[],["kernelresult",6]]],[5,"getrandom_nonblock","","Fills a byte slice with random bytes generated from the …",null,[[],["kernelresult",6]]],[5,"add_randomness","","Contributes the contents of a byte slice to the kernel\'s …",null,[[]]],[0,"sync","kernel","Synchronisation primitives.",null,null],[3,"Ref","kernel::sync","A reference-counted pointer to an instance of <code>T</code>.",null,null],[3,"RefCount","","Holds the reference count of an object.",null,null],[8,"RefCounted","","Trait for reference counted objects.",null,null],[10,"get_count","","Returns a pointer to the object field holds the reference …",22,[[],["refcount",3]]],[3,"CondVar","","Exposes the kernel\'s <code>struct wait_queue_head</code> as a …",null,null],[3,"Guard","","Allows mutual exclusion primitives that implement the […",null,null],[8,"Lock","","A generic mutual exclusion primitive.",null,null],[16,"Inner","","The type of the data protected by the lock.",23,null],[10,"lock_noguard","","Acquires the lock, making the caller its owner.",23,[[]]],[10,"unlock","","Releases the lock, giving up ownership of the lock.",23,[[]]],[10,"locked_data","","Returns the data protected by the lock.",23,[[],["unsafecell",3]]],[3,"LockedBy","","Allows access to some data to be serialised by a lock …",null,null],[3,"Mutex","","Exposes the kernel\'s <code>struct mutex</code>. When multiple threads …",null,null],[3,"SpinLock","","Exposes the kernel\'s <code>spinlock_t</code>. When multiple CPUs …",null,null],[8,"NeedsLockClass","","A trait for types that need a lock class during …",null,null],[10,"init","","Initialises the type instance so that it can be safely …",24,[[["pin",3],["cstr",3]]]],[0,"user_ptr","kernel","User pointers.",null,null],[8,"ReadableFromBytes","kernel::user_ptr","Specifies that a type is safely readable from byte slices.",null,null],[8,"WritableToBytes","","Specifies that a type is safely writable to byte slices.",null,null],[3,"UserSlicePtr","","A reference to an area in userspace memory, which can be …",null,null],[11,"new","","Constructs a user slice from a raw pointer and a length …",25,[[["usize",15]]]],[11,"read_all","","Reads the entirety of the user slice.",25,[[],[["kernelresult",6],["vec",3]]]],[11,"reader","","Constructs a [<code>UserSlicePtrReader</code>].",25,[[],["usersliceptrreader",3]]],[11,"write_all","","Writes the provided slice into the user slice.",25,[[],["kernelresult",6]]],[11,"writer","","Constructs a [<code>UserSlicePtrWriter</code>].",25,[[],["usersliceptrwriter",3]]],[11,"reader_writer","","Constructs both a [<code>UserSlicePtrReader</code>] and a […",25,[[]]],[3,"UserSlicePtrReader","","A reader for [<code>UserSlicePtr</code>].",null,null],[11,"len","","Returns the number of bytes left to be read from this.",26,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if <code>self.len()</code> is 0.",26,[[],["bool",15]]],[11,"read_all","","Reads all data remaining in the user slice.",26,[[],[["kernelresult",6],["vec",3]]]],[11,"read_slice","","Reads a byte slice from the user slice.",26,[[],["kernelresult",6]]],[11,"read_raw","","Reads raw data from the user slice into a raw kernel …",26,[[["usize",15]],["kernelresult",6]]],[11,"read","","Reads the contents of a plain old data (POD) type from …",26,[[],[["readablefrombytes",8],["kernelresult",6]]]],[3,"UserSlicePtrWriter","","A writer for [<code>UserSlicePtr</code>].",null,null],[11,"len","","Returns the number of bytes left to be written from this.",27,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if <code>self.len()</code> is 0.",27,[[],["bool",15]]],[11,"write_slice","","Writes a byte slice to the user slice.",27,[[],["kernelresult",6]]],[11,"write","","Writes the contents of the given data into the user slice.",27,[[],["kernelresult",6]]],[3,"Error","kernel","Generic integer kernel error.",null,null],[6,"KernelResult","","A [<code>Result</code>] with an [<code>Error</code>] error type.",null,null],[3,"CStr","","A string that is guaranteed to have exactly one <code>NUL</code> byte, …",null,null],[3,"Mode","","Permissions.",null,null],[17,"PAGE_SIZE","","Page size defined in terms of the <code>PAGE_SHIFT</code> macro from C.",null,null],[8,"KernelModule","","The top level entrypoint to implementing a kernel module.",null,null],[10,"init","","Called at module initialization time.",28,[[],["kernelresult",6]]],[3,"ThisModule","","Equivalent to <code>THIS_MODULE</code> in the C API.",null,null],[11,"from_ptr","","Creates a [<code>ThisModule</code>] given the <code>THIS_MODULE</code> pointer.",29,[[],["thismodule",3]]],[11,"kernel_param_lock","","Locks the module parameters to access them.",29,[[],["kparamguard",3]]],[3,"KParamGuard","","Scoped lock on the kernel parameters of [<code>ThisModule</code>].",null,null],[14,"declare_file_operations","","Defines the [<code>FileOperations::TO_USE</code>] field based on a …",null,null],[14,"pr_emerg","","Prints an emergency-level message (level 0).",null,null],[14,"pr_alert","","Prints an alert-level message (level 1).",null,null],[14,"pr_crit","","Prints a critical-level message (level 2).",null,null],[14,"pr_err","","Prints an error-level message (level 3).",null,null],[14,"pr_warn","","Prints a warning-level message (level 4).",null,null],[14,"pr_notice","","Prints a notice-level message (level 5).",null,null],[14,"pr_info","","Prints an info-level message (level 6).",null,null],[14,"pr_cont","","Continues a previous log message in the same line.",null,null],[14,"static_assert","","Static assert (i.e. compile-time assert).",null,null],[14,"condvar_init","","Safely initialises a [<code>CondVar</code>] with the given name, …",null,null],[14,"mutex_init","","Safely initialises a [<code>Mutex</code>] with the given name, …",null,null],[14,"spinlock_init","","Safely initialises a [<code>SpinLock</code>] with the given name, …",null,null],[14,"cstr","","Creates a new <code>CStr</code> from a string literal.",null,null],[14,"offset_of","","Calculates the offset of a field from the beginning of …",null,null],[14,"container_of","","Produces a pointer to an object from a pointer to one of …",null,null],[11,"borrow","kernel::buffer","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","kernel::chrdev","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","kernel","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow","kernel::file_operations","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","kernel::miscdev","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","kernel::pages","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","kernel::linked_list","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","kernel::prelude","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","kernel::sync","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"borrow","kernel","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"borrow","kernel::user_ptr","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","kernel","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"deref","kernel::prelude","",31,[[],["str",15]]],[11,"as_ref","","",31,[[],["str",15]]],[11,"as_ref","","",31,[[]]],[11,"deref_mut","","",31,[[],["str",15]]],[11,"extend","","",31,[[]]],[11,"extend_one","","",31,[[["str",15],["cow",4]]]],[11,"extend","","",31,[[]]],[11,"extend_one","","",31,[[["str",15]]]],[11,"extend","","",31,[[]]],[11,"extend_one","","",31,[[["char",15]]]],[11,"extend_reserve","","",31,[[["usize",15]]]],[11,"extend","","",31,[[]]],[11,"extend","","",31,[[]]],[11,"extend_one","","",31,[[["string",3]]]],[11,"extend","","",31,[[]]],[11,"extend_one","","",31,[[["char",15]]]],[11,"extend_reserve","","",31,[[["usize",15]]]],[11,"clone","","",31,[[],["string",3]]],[11,"clone_from","","",31,[[["string",3]]]],[11,"partial_cmp","","",31,[[["string",3]],[["ordering",4],["option",4]]]],[11,"borrow_mut","","",31,[[],["str",15]]],[11,"eq","","",31,[[["str",15]],["bool",15]]],[11,"ne","","",31,[[["str",15]],["bool",15]]],[11,"eq","","",31,[[["str",15]],["bool",15]]],[11,"ne","","",31,[[["str",15]],["bool",15]]],[11,"eq","","",31,[[["string",3]],["bool",15]]],[11,"ne","","",31,[[["string",3]],["bool",15]]],[11,"eq","","",31,[[["cow",4]],["bool",15]]],[11,"ne","","",31,[[["cow",4]],["bool",15]]],[11,"from","","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …",31,[[["box",3],["str",15],["global",3]],["string",3]]],[11,"from","","",31,[[["str",15],["cow",4]],["string",3]]],[11,"from","","Converts a <code>&mut str</code> into a <code>String</code>.",31,[[["str",15]],["string",3]]],[11,"from","","",31,[[["str",15]],["string",3]]],[11,"from","","",31,[[["char",15]],["string",3]]],[11,"from","","",31,[[["string",3]],["string",3]]],[11,"index","","",31,[[["rangefull",3]],["str",15]]],[11,"index","","",31,[[["rangeinclusive",3],["usize",15]],["str",15]]],[11,"index","","",31,[[["range",3],["usize",15]],["str",15]]],[11,"index","","",31,[[["usize",15],["rangeto",3]],["str",15]]],[11,"index","","",31,[[["usize",15],["rangetoinclusive",3]],["str",15]]],[11,"index","","",31,[[["usize",15],["rangefrom",3]],["str",15]]],[11,"add_assign","","",31,[[["str",15]]]],[11,"index_mut","","",31,[[["usize",15],["rangetoinclusive",3]],["str",15]]],[11,"index_mut","","",31,[[["usize",15],["rangefrom",3]],["str",15]]],[11,"index_mut","","",31,[[["rangefull",3]],["str",15]]],[11,"index_mut","","",31,[[["rangeinclusive",3],["usize",15]],["str",15]]],[11,"index_mut","","",31,[[["range",3],["usize",15]],["str",15]]],[11,"index_mut","","",31,[[["usize",15],["rangeto",3]],["str",15]]],[11,"from_str","","",31,[[["str",15]],[["string",3],["result",4]]]],[11,"as_mut","","",31,[[],["str",15]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"borrow","","",31,[[],["str",15]]],[11,"add","","",31,[[["str",15]],["string",3]]],[11,"write_str","","",31,[[["str",15]],[["result",4],["error",3]]]],[11,"write_char","","",31,[[["char",15]],[["result",4],["error",3]]]],[11,"default","","Creates an empty <code>String</code>.",31,[[],["string",3]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from_iter","","",31,[[],["string",3]]],[11,"from_iter","","",31,[[],["string",3]]],[11,"from_iter","","",31,[[],["string",3]]],[11,"from_iter","","",31,[[],["string",3]]],[11,"from_iter","","",31,[[],["string",3]]],[11,"from_iter","","",31,[[],["string",3]]],[11,"to_string","","",31,[[],["string",3]]],[11,"cmp","","",31,[[["string",3]],["ordering",4]]],[11,"hash","","",31,[[]]],[11,"convert","kernel::chrdev","",1,[[]]],[11,"convert","kernel::miscdev","",12,[[]]],[11,"into_pointer","kernel::sync","",32,[[]]],[11,"from_pointer","","",32,[[]]],[11,"lock_noguard","","",37,[[]]],[11,"unlock","","",37,[[]]],[11,"locked_data","","",37,[[],["unsafecell",3]]],[11,"lock_noguard","","",38,[[]]],[11,"unlock","","",38,[[]]],[11,"locked_data","","",38,[[],["unsafecell",3]]],[11,"init","","",34,[[["pin",3],["cstr",3]]]],[11,"init","","",37,[[["pin",3],["cstr",3]]]],[11,"init","","",38,[[["pin",3],["cstr",3]]]],[11,"deref","","",32,[[]]],[11,"deref","","",35,[[]]],[11,"deref","kernel","",40,[[],["str",15]]],[11,"deref_mut","kernel::sync","",35,[[]]],[11,"drop","kernel::chrdev","",1,[[]]],[11,"drop","kernel::miscdev","Removes the registration from the kernel if it has …",12,[[]]],[11,"drop","kernel::pages","",13,[[]]],[11,"drop","kernel::linked_list","",17,[[]]],[11,"drop","kernel::sync","",32,[[]]],[11,"drop","","",35,[[]]],[11,"drop","kernel","",41,[[]]],[11,"write_str","kernel::buffer","",0,[[["str",15]],["result",6]]],[11,"from","kernel","",30,[[["tryfrominterror",3]],["error",3]]],[11,"from","","",30,[[["utf8error",3]],["error",3]]],[11,"from","","",30,[[["tryreserveerror",4]],["error",3]]],[11,"from","","",30,[[["allocerror",3]],["error",3]]],[11,"clone","kernel::sync","",32,[[]]],[11,"default","kernel::linked_list","",17,[[]]],[11,"default","","",19,[[]]],[11,"default","kernel::sync","",33,[[]]],[18,"EINVAL","kernel","Invalid argument.",30,null],[18,"ENOMEM","","Out of memory.",30,null],[18,"EFAULT","","Bad address.",30,null],[18,"ESPIPE","","Illegal seek.",30,null],[18,"EAGAIN","","Try again.",30,null],[18,"EBUSY","","Device or resource busy.",30,null],[18,"ERESTARTSYS","","Restart the system call.",30,null],[18,"EPERM","","Operation not permitted.",30,null],[18,"ESRCH","","No such process.",30,null],[18,"ENOENT","","No such file or directory.",30,null],[18,"EINTR","","Interrupted system call.",30,null],[11,"from_kernel_errno","","Creates an [<code>Error</code>] from a kernel error code.",30,[[["c_int",6]],["error",3]]],[11,"to_kernel_errno","","Returns the kernel error code.",30,[[],["c_int",6]]],[11,"new","kernel::prelude","Creates a new empty <code>String</code>.",31,[[],["string",3]]],[11,"with_capacity","","Creates a new empty <code>String</code> with a particular capacity.",31,[[["usize",15]],["string",3]]],[11,"from_utf8","","Converts a vector of bytes to a <code>String</code>.",31,[[["vec",3],["global",3],["u8",15]],[["result",4],["string",3],["fromutf8error",3]]]],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid …",31,[[],[["cow",4],["str",15]]]],[11,"from_utf16","","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …",31,[[],[["string",3],["fromutf16error",3],["result",4]]]],[11,"from_utf16_lossy","","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing…",31,[[],["string",3]]],[11,"into_raw_parts","","Decomposes a <code>String</code> into its raw components.",31,[[]]],[11,"from_raw_parts","","Creates a new <code>String</code> from a length, capacity, and pointer.",31,[[["usize",15]],["string",3]]],[11,"from_utf8_unchecked","","Converts a vector of bytes to a <code>String</code> without checking …",31,[[["vec",3],["global",3],["u8",15]],["string",3]]],[11,"into_bytes","","Converts a <code>String</code> into a byte vector.",31,[[],[["vec",3],["global",3],["u8",15]]]],[11,"as_str","","Extracts a string slice containing the entire <code>String</code>.",31,[[],["str",15]]],[11,"as_mut_str","","Converts a <code>String</code> into a mutable string slice.",31,[[],["str",15]]],[11,"push_str","","Appends a given string slice onto the end of this <code>String</code>.",31,[[["str",15]]]],[11,"capacity","","Returns this <code>String</code>\'s capacity, in bytes.",31,[[],["usize",15]]],[11,"reserve","","Ensures that this <code>String</code>\'s capacity is at least <code>additional</code>…",31,[[["usize",15]]]],[11,"reserve_exact","","Ensures that this <code>String</code>\'s capacity is <code>additional</code> bytes …",31,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",31,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",31,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of this <code>String</code> to match its length.",31,[[]]],[11,"shrink_to","","Shrinks the capacity of this <code>String</code> with a lower bound.",31,[[["usize",15]]]],[11,"push","","Appends the given [<code>char</code>] to the end of this <code>String</code>.",31,[[["char",15]]]],[11,"as_bytes","","Returns a byte slice of this <code>String</code>\'s contents.",31,[[]]],[11,"truncate","","Shortens this <code>String</code> to the specified length.",31,[[["usize",15]]]],[11,"pop","","Removes the last character from the string buffer and …",31,[[],[["option",4],["char",15]]]],[11,"remove","","Removes a [<code>char</code>] from this <code>String</code> at a byte position and …",31,[[["usize",15]],["char",15]]],[11,"retain","","Retains only the characters specified by the predicate.",31,[[]]],[11,"insert","","Inserts a character into this <code>String</code> at a byte position.",31,[[["usize",15],["char",15]]]],[11,"insert_str","","Inserts a string slice into this <code>String</code> at a byte …",31,[[["usize",15],["str",15]]]],[11,"as_mut_vec","","Returns a mutable reference to the contents of this <code>String</code>…",31,[[],["vec",3]]],[11,"len","","Returns the length of this <code>String</code>, in bytes, not [<code>char</code>]s …",31,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if this <code>String</code> has a length of zero, and …",31,[[],["bool",15]]],[11,"split_off","","Splits the string into two at the given byte index.",31,[[["usize",15]],["string",3]]],[11,"clear","","Truncates this <code>String</code>, removing all contents.",31,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",31,[[],["drain",3]]],[11,"replace_range","","Removes the specified range in the string, and replaces …",31,[[["str",15]]]],[11,"into_boxed_str","","Converts this <code>String</code> into a [<code>Box</code>]<code><</code><code>str</code><code>></code>.",31,[[],[["box",3],["str",15],["global",3]]]],[11,"try_new","kernel::sync","Constructs a new reference counted instance of <code>T</code>.",32,[[],["kernelresult",6]]],[11,"new_from","","Creates a new reference-counted pointer to the given …",32,[[]]],[11,"get_mut","","Returns a mutable reference to <code>T</code> iff the reference count …",32,[[],["option",4]]],[11,"ptr_eq","","Determines if two reference-counted pointers point to the …",32,[[],["bool",15]]],[11,"into_raw","","Deconstructs a [<code>Ref</code>] object into a raw pointer.",32,[[]]],[11,"from_raw","","Recreates a [<code>Ref</code>] instance previously deconstructed via […",32,[[]]],[11,"new","","Constructs a new instance of [<code>RefCount</code>].",33,[[]]],[11,"new","","Constructs a new conditional variable.",34,[[]]],[11,"wait","","Atomically releases the given lock (whose ownership is …",34,[[["guard",3]],["bool",15]]],[11,"notify_one","","Wakes a single waiter up, if any. This is not \'sticky\' in …",34,[[]]],[11,"notify_all","","Wakes all waiters up, if any. This is not \'sticky\' in the …",34,[[]]],[11,"free_waiters","","Wakes all waiters up. If they were added by <code>epoll</code>, they …",34,[[]]],[11,"new","","Constructs a new instance of [<code>LockedBy</code>].",36,[[]]],[11,"access","","Returns a reference to the protected data when the caller …",36,[[["guard",3]]]],[11,"access_mut","","Returns a mutable reference to the protected data when …",36,[[["guard",3]]]],[11,"access_from_mut","","Returns a mutable reference to the protected data when …",36,[[]]],[11,"new","","Constructs a new mutex.",37,[[]]],[11,"lock","","Locks the mutex and gives the caller access to the data …",37,[[],["guard",3]]],[11,"new","","Constructs a new spinlock.",38,[[]]],[11,"lock","","Locks the spinlock and gives the caller access to the …",38,[[],["guard",3]]],[11,"from_int","kernel","Creates a [<code>Mode</code>] from an integer.",39,[[["u16",15]],["mode",3]]],[11,"as_int","","Returns the mode as an integer.",39,[[],["u16",15]]],[11,"new_unchecked","","Creates a [<code>CStr</code>] from a [<code>str</code>] without performing any …",40,[[["str",15]],["cstr",3]]]],"p":[[3,"Buffer"],[3,"Registration"],[3,"File"],[3,"PollTable"],[4,"SeekFrom"],[3,"ToUse"],[8,"IoctlHandler"],[3,"IoctlCommand"],[8,"FileOpenAdapter"],[8,"FileOpener"],[8,"FileOperations"],[8,"PointerWrapper"],[3,"Registration"],[3,"Pages"],[8,"GetLinks"],[8,"Wrapper"],[8,"GetLinksWrapped"],[3,"List"],[3,"CursorMut"],[3,"Links"],[3,"Cursor"],[8,"ToOwned"],[8,"RefCounted"],[8,"Lock"],[8,"NeedsLockClass"],[3,"UserSlicePtr"],[3,"UserSlicePtrReader"],[3,"UserSlicePtrWriter"],[8,"KernelModule"],[3,"ThisModule"],[3,"Error"],[3,"String"],[3,"Ref"],[3,"RefCount"],[3,"CondVar"],[3,"Guard"],[3,"LockedBy"],[3,"Mutex"],[3,"SpinLock"],[3,"Mode"],[3,"CStr"],[3,"KParamGuard"]],"a":{"alloc":[516],"length":[544],"malloc":[516],"print":[186]}},\
"module":{"doc":"Proc macro crate implementing the [<code>module!</code>] magic.","i":[[14,"module","module","Declares a kernel module.",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);